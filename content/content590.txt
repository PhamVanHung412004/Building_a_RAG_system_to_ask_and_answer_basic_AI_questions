<<<<<<< HEAD
Node ID: 3bd7ad68-20ea-48e1-b6e2-2578c12b256d
Text: google . com /uc?id =1 IBScGdW2xlNsc9v5zSAya548kNgiOrko 2 3 def
count_word ( file_path ): 4 counter = {} 5 6 # Your Code Here 7 8 #
End Code Here 9 10 return counter 11 file_path = ’/ content / P1_data
. txt ’ 12 result = count_word ( file_path ) 13 assert result [’who ’]
== 3 14 print ( result [’man ’]) a) 4 b) 5 c) 6 d) 9 Câu hỏi 4:(Code)
Hoàn...
=======
google . com /uc?id =1 IBScGdW2xlNsc9v5zSAya548kNgiOrko
2
3 def count_word ( file_path ):
4 counter = {}
5
6 # Your Code Here
7
8 # End Code Here
9
10 return counter
11 file_path = ’/ content / P1_data . txt ’
12 result = count_word ( file_path )
13 assert result [’who ’] == 3
14 print ( result [’man ’])
a) 4
b) 5
c) 6
d) 9
Câu hỏi 4:(Code) Hoàn thành chương trình sau với mô tả bài toán từ câu I.4. Đầu ra của chương trình
dưới đây là gì?
1 def levenshtein_distance ( token1 , token2 ):
2 # Your Code Here
3
4 # End Code Here
5
6 return distance
7
8 assert levenshtein_distance ("hi", " hello ") == 4.0
9 print ( levenshtein_distance (" hola ", " hello "))
a) 1.0
b) 2.0
c) 3.0
d) 4.0
Câu hỏi 5:(Code) Hoàn thành chương trình sau. Đầu ra của chương trình dưới đây là gì?
1 def check_the_number (N):
2 list_of_numbers = []
3 result = ""
4 for i in range (1 , 5):
5 # Your code here
6 #Su dung append them i vao trong list_of_number
7 if N in list_of_numbers :
8 results = " True "
9 if N not in list_of_numbers :
10 results = " False "
11 return results
12
13 N = 7
14 assert check_the_number (N) == " False "
15
7
>>>>>>> HEAD@{1}
