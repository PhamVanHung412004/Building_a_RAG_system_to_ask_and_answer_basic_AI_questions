<<<<<<< HEAD
Node ID: fc52084e-d3bd-4188-9ba7-c311cd410e4a
Text: Conv2d (256*2 , 128 , 5, stride =1 , padding =2) 41 self .
dec_bn3 = nn. BatchNorm2d (128) 42 self . dec_upsamp4 = nn. Upsample (
scale_factor =2 , mode =’ bilinear ’) 43 self . dec_conv4 = nn. Conv2d
(128*2 , 64 , 5, stride =1 , padding =2) 44 self . dec_bn4 = nn.
BatchNorm2d (64) 45 self . dec_upsamp5 = nn. Upsample ( scale_factor
=2 , mode =’...
=======
Conv2d (256*2 , 128 , 5, stride =1 , padding =2)
41 self . dec_bn3 = nn. BatchNorm2d (128)
42 self . dec_upsamp4 = nn. Upsample ( scale_factor =2 , mode =’ bilinear ’)
43 self . dec_conv4 = nn. Conv2d (128*2 , 64 , 5, stride =1 , padding =2)
44 self . dec_bn4 = nn. BatchNorm2d (64)
45 self . dec_upsamp5 = nn. Upsample ( scale_factor =2 , mode =’ bilinear ’)
46 self . dec_conv5 = nn. Conv2d (64 , 2, 5, stride =1 , padding =2)
47
48 def encoder (self , x):
49 x = F. relu ( self . enc_conv1 (x))
50 x = self . enc_bn1 (x)
51 x = F. relu ( self . enc_conv2 (x))
52 x = self . enc_bn2 (x)
53 x = F. relu ( self . enc_conv3 (x))
54 x = self . enc_bn3 (x)
55 x = F. relu ( self . enc_conv4 (x))
56 x = self . enc_bn4 (x)
57 x = x. view (-1, 4*4*1024)
58 x = self . enc_dropout1 (x)
59 x = self . enc_fc1 (x)
60 mu = x [... , : self . hidden_size ]
61 logvar = x [... , self . hidden_size :]
62 return mu , logvar
63
64 def cond_encoder (self , x):
65 x = F. relu ( self . cond_enc_conv1 (x))
66 sc_feat32 = self . 
>>>>>>> HEAD@{1}
