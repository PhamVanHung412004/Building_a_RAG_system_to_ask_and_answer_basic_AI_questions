join ( out_dir , " images "), listdir , featslistdir , split =" test "
11 )
12 nbatches = np. int_ (np. floor ( data . img_num / batchsize ))
13 data_loader = DataLoader (
14 dataset =data ,
15 num_workers = args [" nthreads "],
16 batch_size = batchsize ,
17 shuffle =True ,
18 drop_last =True ,
19 )
20
21 optimizer = optim . Adam ( model_mdn . parameters () , lr =1e -3)
22
23 # Eval
24 model_vae . eval ()
25 model_mdn . eval ()
26 itr_idx = 0
27 test_loss = 0.0
28
29 for batch_idx , ( batch , batch_recon_const , batch_weights , _, batch_feats ) in
tqdm (
30 enumerate ( data_loader ), total = nbatches
31 ):
32 input_color = batch . cuda ()
33 input_greylevel = batch_recon_const . cuda ()
34 input_feats = batch_feats . cuda ()
35 z = torch . randn ( batchsize , hiddensize )
36 optimizer . zero_grad ()
37
38 # Get the parameters of the posterior distribution
39 mu , logvar , _ = model_vae ( input_color , input_greylevel , z)
40
41 # Get the GMM vector
15