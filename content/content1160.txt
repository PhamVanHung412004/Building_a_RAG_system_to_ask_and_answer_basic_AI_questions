__init__ ()
69 self . channels = channels
70 self . out_channel = out_channel or channels
71 self . use_conv = use_conv
72 stride = 2
73 if use_conv :
74 self .op = nn. Conv2d (
75 self . channels , self . out_channel , 3, stride = stride , padding =1
76 )
77 else :
78 assert self . channels == self . out_channel
79 self .op = nn. AvgPool2d ( kernel_size = stride , stride = stride )
80
81 def forward (self , x):
82 assert x. shape [1] == self . channels
83 return self .op(x)
84
85
86 class ResBlock ( EmbedBlock ):
87 """
88 A residual block that can optionally change the number of channels .
89 : param channels : the number of input channels .
90 : param emb_channels : the number of embedding channels .
91 : param dropout : the rate of dropout .
92 : param out_channel : if specified , the number of out channels .
93 : param use_conv : if True and out_channel is specified , use a spatial
94 convolution instead of a smaller 1x1 convolution to change the
95 channels in the skip connection .
96 : param use_checkpoint : if True , use gradient checkpointing on this module .
97 : param up: if True , use this block for upsampling .
