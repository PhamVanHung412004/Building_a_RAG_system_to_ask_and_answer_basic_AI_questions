<<<<<<< HEAD
Node ID: d34b4aa1-0e45-44a8-8eed-d6c7cca85fec
Text: Daily AI Exercise (AIO) aivietnam.edu.vn Trong lớp Person trên,
chúng ta gợi ý rằng thuộc tính name là một chuỗi (str), thuộc tính age
là một số nguyên (int) và phương thức greet trả về một chuỗi (str).
Lưu ý: Việc tạo type hints trong code chương trình là không bắt buộc,
không có chúng thì chương trình vẫn chạy bình thường. Vậy thì khi nào
nên ...
=======
Daily AI Exercise (AIO) aivietnam.edu.vn
Trong lớp Person trên, chúng ta gợi ý rằng thuộc tính name là một chuỗi (str), thuộc tính age là một
số nguyên (int) và phương thức greet trả về một chuỗi (str).
Lưu ý: Việc tạo type hints trong code chương trình là không bắt buộc, không có chúng thì chương
trình vẫn chạy bình thường. Vậy thì khi nào nên và không nên sử dụng type hints? Thì sẽ tùy vào từng
dự án, nhóm bạn làm việc có muốn sử dụng type hints không. Nhìn chung, type hints có nhiều ưu điểm
giúp code chương trình rõ ràng và dễ phát hiện và sửa lỗi bảo trì hơn so với nhược điểm như phải dành
thêm nhiều thời gian hơn để viết mã.
2.2 Kết hợp Type Hints với Mypy
Type hints giúp code của chúng ta rõ ràng, dễ đọc và dễ sửa lỗi hơn, tuy nhiên việc phát hiện lỗi chúng
ta vẫn thực hiện thủ công, người lập trình phải tự đọc hiểu và cố gắng kiểm soát các kiểu dữ liệu để
đảm bảo tính logic nhưng điều này có thể gây mất nhiều thời gian mà không hiệu quả.
Công cụ mypy ra đời để khắc phục điều này, nó là một công cụ kiểm tra kiểu dữ liệu static Python, cho
phép chúng ta kiểm tra kiểu dữ liệu trong chương trình mà không cần phải thực thi chúng. Nó được
phát triển bởi Jukka Lehtosalo và được công bố dưới dạng mã nguồn mở.
Để sử dụng mypy, trước tiên chúng ta cần cài đặt nó thông qua câu lệnh sau:
1 pip install mypy
Sau khi cài đặt thành công, chúng ta có thể sử dụng mypy để kiểm tra kiểu dữ liệu trong chương trình
của chúng ta bằng cách chạy lệnh:
1 mypy my_script .py
Trong đó my_script.py là file chứa code chương trình và các type hints. Ta cần lưu ý là mypy chỉ kiểm
tra được cho tệp có đuôi .py, đối với tệp notebook.ipynb chúng ta cần sử dụng công cụ khác như nbqa.
Trong phạm vi bài viết này, chúng ta chỉ kiểm tra kiểu đối với file .py.
Chúng ta cùng quay trở lại ví dụ tính tổng hai số, ta tạo type hints cho các tham số là kiểu int, nhưng
trong ví dụ, chúng ta truyền giá trị cho hai tham số là kiểu float và int thì chương trình vẫn chạy bình
thường. Dưới đây, chúng ta sẽ kiểm tra kiểu bằng mypy.
1 def add (x: int , y: int ) -> int :
2 return x + y
3
4 if __name__ == " __main__ ":
5 print ( add (x= 1, y =2) )
6 print ( add (x= 1.5 , y =2) )
7 print ( add . __annotations__ )
====================================== Output ========================================
mypy add .py
add .py :6: error : Argument "x" to " add " has incompatible type " float "; expected " int "
[arg - type ]
Found 1 error in 1 file ( checked 1 source file )
======================================================================================
Kết quả mypy trả về cho thấy trong file code của chúng ta add.py xuất hiện lỗi kiểu ở dòng 6 tức là
dòng print(add(x= 1.5, y=2)), lỗi này do x=1.5 có kiểu là float không khớp với kiểu dữ liệu dự kiến từ
type hints là int. Sau khi xác định lỗi, chúng ta dễ dàng sửa lỗi và chương trình sẽ trở lên đúng đắn
hơn. 
>>>>>>> HEAD@{1}
