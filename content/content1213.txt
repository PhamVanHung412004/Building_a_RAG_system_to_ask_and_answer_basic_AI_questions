<<<<<<< HEAD
Node ID: 9f1fb63a-6cca-4095-9d0f-4bbda6675af1
Text: ToTensor () , 9 transforms . Normalize ( means , stds ), 10 ] 11
) 12 13 # Clone github repository with data 14 if not os. path . isdir
("./ Homework3 - PACS "): 15 ! git clone https :// github . com /
MachineLearning2020 / Homework3 - PACS 16 17 # Define datasets root 18
DIR_PHOTO = " Homework3 - PACS / PACS / photo " 19 DIR_ART = "
Homework3 -...
=======
ToTensor () ,
9 transforms . Normalize ( means , stds ),
10 ]
11 )
12
13 # Clone github repository with data
14 if not os. path . isdir ("./ Homework3 - PACS "):
15 ! git clone https :// github . com / MachineLearning2020 / Homework3 - PACS
16
17 # Define datasets root
18 DIR_PHOTO = " Homework3 - PACS / PACS / photo "
19 DIR_ART = " Homework3 - PACS / PACS / art_painting "
20 DIR_CARTOON = " Homework3 - PACS / PACS / cartoon "
21 DIR_SKETCH = " Homework3 - PACS / PACS / sketch "
22
23 # Prepare Pytorch train / test Datasets
24 photo_dataset = torchvision . datasets . ImageFolder ( DIR_PHOTO , transform = transf
)
25 art_dataset = torchvision . datasets . ImageFolder ( DIR_ART , transform = transf )
26 cartoon_dataset = torchvision . datasets . ImageFolder ( DIR_CARTOON , transform =
transf )
27 sketch_dataset = torchvision . datasets . ImageFolder ( DIR_SKETCH , transform =
transf )
Trong bài toán này, ta sẽ sử dụng domain photo làm tập train, và sử dụng tập val của photo
và toàn bộ các domain còn lại để test. Tiếp theo ta sẽ tạo train và test data loader. Ta sẽ dùng
ConcatDataset để concat các dataset với nhau.
1 # Split dataset into train and test
2 train_size = int (0.8 * len ( photo_dataset ))
3 test_size = len ( photo_dataset ) - train_size
4
5 train_dataset , test_dataset = torch . utils . data . random_split (
6 photo_dataset , [ train_size , test_size ]
7 )
8
9 # Concatenate all datasets
10 test_datasets = torch . utils . 
>>>>>>> HEAD@{1}
