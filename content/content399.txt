AI VIETNAM aivietnam.edu.vn
Hình 7: Mô hình thiết kế của kiến trúc Pointnet
Tạo dataloader:
1 point_clouds = np. stack ( point_clouds )
2 dense_labels = np. stack ( dense_labels )
3 # label_clouds = keras . utils . to_categorical ( dense_labels , num_classes =3)
4 label_clouds = dense_labels
5 class PointCloudData ( Dataset ):
6 def __init__ (self , point_clouds , label_clouds ):
7 self . point_clouds = point_clouds
8 self . label_clouds = label_clouds
9 def __len__ ( self ):
10 return point_clouds . shape [0]
11 def __getitem__ (self , idx ):
12 return {’ pointcloud ’: torch . from_numpy ( point_clouds [ idx ]) ,
13 ’ category ’: torch . from_numpy (np. asarray ( label_clouds [ idx ]))}
14 X_train , X_val , y_train , y_val = train_test_split ( point_clouds , label_clouds ,
test_size =0.2 , random_state =42)
15 train_loader = PointCloudData ( X_train , y_train )
16 val_loader = PointCloudData ( X_val , y_val )
17 train_loader = DataLoader ( dataset = train_loader , batch_size =32 , shuffle = True )
18 val_loader = DataLoader ( dataset = val_loader , batch_size =32 , shuffle = True )
2.2 Model
Trong phần này chúng ta sẽ hiện thực lại kiến trúc Pointnet như hình 7.
2.2.1 T-Net
Trong PointNet, T-net đóng vai trò quan trọng trong việc đạt được tính bất biến hướng của đám mây
điểm. 