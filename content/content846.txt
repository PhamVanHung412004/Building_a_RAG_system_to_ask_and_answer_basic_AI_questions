<<<<<<< HEAD
Node ID: b2da7c24-7c5a-45be-af5c-eaf107947fef
Text: AI VIETNAM aivietnam.edu.vn Hình 13: Image retrieval ảnh phức
tạp với model Clip và L1 Truy vấn embedding vector với độ đo L2hàm
get_l2_score được nâng cấp lên bằng cách sử dụng CLIP model để trích
xuất vector đặc trưng. 1 def get_l2_score(root_img_path, query_path,
size): 2 query = read_image_from_path(query_path, size) 3
query_embedding = get_...
=======
AI VIETNAM aivietnam.edu.vn
Hình 13: Image retrieval ảnh phức tạp với model Clip và L1
Truy vấn embedding vector với độ đo L2hàm get_l2_score được nâng cấp lên bằng cách sử dụng
CLIP model để trích xuất vector đặc trưng.
1 def get_l2_score(root_img_path, query_path, size):
2 query = read_image_from_path(query_path, size)
3 query_embedding = get_single_image_embedding(query)
4 ls_path_score = []
5 for folder in os.listdir(root_img_path):
6 if folder in CLASS_NAME:
7 path = root_img_path + folder
8 images_np, images_path = folder_to_images(path, size) # mang numpy nhieu anh,
paths
9 embedding_list = []
10 for idx_img in range(images_np.shape[0]):
11 embedding = get_single_image_embedding(images_np[idx_img].astype(np.uint8))
12 embedding_list.append(embedding)
13 rates = mean_square_difference(query_embedding, np.stack(embedding_list))
14 ls_path_score.extend(list(zip(images_path, rates)))
15 return query, ls_path_score
12
>>>>>>> HEAD@{1}
