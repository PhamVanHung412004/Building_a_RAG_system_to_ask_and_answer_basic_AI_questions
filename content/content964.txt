AI VIETNAM aivietnam.edu.vn
(f) Xây dựng vector database:Với hàm tạo vector embedding đã triển khai, ta sẽ sử dụng nó
để tạo một cột trong bảng dữ liệu dùng để chứa kết quả lời gọi hàmget_embeddings() với input
là các câu hỏi của từng mẫu dữ liệu. Cụ thể, ta tạo cột mới tên làquestion_embedding
và lưu vector embedding của câu hỏi như sau:
1 EMBEDDING_COLUMN = ’question_embedding’
2 embeddings_dataset = raw_datasets.map(
3 lambda x: {
4 EMBEDDING_COLUMN: get_embeddings(
5 x[’question’]
6 ).detach().cpu().numpy()[0]
7 }
8 )
Sau đó, để có thể tìm kiếm các vector tương đồng, ta sẽ tạo một cấu trúc dữ liệu đặc biệt là
Faiss Index như sau:
1 embeddings_dataset.add_faiss_index(column=EMBEDDING_COLUMN)
Cuối cùng, chúng ta đã có một vector database lưu trữ vector embedding của các câu hỏi
trong bộ dữ liệu. Từ đây, ta sẽ tiến hành thử thực hiện truy vấn với một câu hỏi đầu vào
bất kì như sau:
1 input_question = ’When did Beyonce start becoming popular?’
2
3 input_quest_embedding = get_embeddings([input_question])
4 input_quest_embedding = input_quest_embedding.cpu().detach().numpy()
5
6 TOP_K = 5
7 scores, samples = embeddings_dataset.get_nearest_examples(
8 EMBEDDING_COLUMN, input_quest_embedding, k=TOP_K
9 )
10
11 for idx, score in enumerate(scores):
12 print(f’Top {idx + 1}\tScore: {score}’)
13 print(f’Question: {samples["question"][idx]}’)
14 print(f’Context: {samples["context"][idx]}’)
15 print()
Khi chạy xong đoạn lệnh trên, ta được kết quả trả về như sau:
Hình 6: Kết quả truy vấn được in ra màn hình
Có thể thấy, vì câu hỏi đầu vào có tồn tại trong vector database của chúng ta nên mẫu dữ
liệu tương đồng nhất cũng chính là mẫu có câu hỏi tương tự.
