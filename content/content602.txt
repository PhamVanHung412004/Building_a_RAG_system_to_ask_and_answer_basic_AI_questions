<<<<<<< HEAD
Node ID: 65d12ad9-8c76-438a-a774-95c64286843e
Text: AIO2024 aivietnam.edu.vn 2. Kỹ thuật slicing Kỹ thuật slicing
cho phép thao tác với nhiều phần tử trong danh sách. Cú pháp của kỹ
thuật slicing là tên-danh-sách[start:end:step], trong đó start, end,
và step cách nhau bằng dấu hai chấm (:) và có giá trị mặc định lần
lượt là 0, độ dài của danh sách len(.), và 1. Cú pháp trên có ý nghĩa
là lấy các ...
=======
AIO2024 aivietnam.edu.vn
2. Kỹ thuật slicing
Kỹ thuật slicing cho phép thao tác với nhiều phần tử trong danh sách. Cú pháp của kỹ thuật slicing là
tên-danh-sách[start:end:step], trong đó start, end, và step cách nhau bằng dấu hai chấm (:) và có giá
trị mặc định lần lượt là 0, độ dài của danh sách len(.), và 1. Cú pháp trên có ý nghĩa là lấy các phần
tử có chỉ mục bắt đầu từ start đến chỉ mục (end-1) với giá trị tăng lên là step. Khi
Xét ví dụ 2 với một danh sách data chứa sáu phần tử và mỗi phần tử có một giá trị chỉ mục. Ba phần
tử đầu tiên của danh sách được lấy theo kỹ thuật slicing là data[0:3:1], trong đó start=0, end=3, và
step=1. data[0:3:1] sẽ lấy các phần tử theo thứ tự có chỉ mục là 0, 1, và 2. Ở đây, phần tử với chỉ mục
là 3 sẽ không được lấy vì slicing chỉ lấy phần tử tới chỉ mục (end-1).
1 # Python code
2 data = [4 , 5, 6, 7, 8, 9]
3 print ( data [0:3:1])
4 print ( data [2:4:1])
5 print ( data [3:6:1])
6 print ( data [0:6:2])
7 print ( data [0:5:3])
8 print ( data [1:6:2])
================= Output ================
[4 , 5, 6]
[6 , 7]
[7 , 8, 9]
[4 , 6, 8]
[4 , 7]
[5 , 7, 9]
==========================================
Ví dụ 2: Kỹ thuật slicing trong Python.
Mặc dù chúng ta thấy có ba thông tin start, end, và step ở kỹ thuật slicing, ba thông tin này có thể
không cần khai báo như ở ví dụ 3. 
>>>>>>> HEAD@{1}
