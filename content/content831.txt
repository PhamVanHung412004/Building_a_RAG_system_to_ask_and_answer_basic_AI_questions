<<<<<<< HEAD
Node ID: f4c485b1-4f5b-45f6-aecd-a36a2d8953e9
Text: AI VIETNAM aivietnam.edu.vn 2.1.1 Truy vấn hình ảnh với độ đo L1
Chúng ta xây dựng một hàmabsolute_difference () tính độ tương đồng
giữa các hình ảnh. Trong ví dụ này chúng ta sẽ sử dụng hàm L1. Hàm L1
có công thức tính như sau: L1(⃗ a,⃗b) = NX i=1 |a − b| 1 def
absolute_difference(query, data): 2 axis_batch_size =
tuple(range(1,len(data.shape))...
=======
AI VIETNAM aivietnam.edu.vn
2.1.1 Truy vấn hình ảnh với độ đo L1
Chúng ta xây dựng một hàmabsolute_difference () tính độ tương đồng giữa các hình ảnh. Trong ví
dụ này chúng ta sẽ sử dụng hàm L1. Hàm L1 có công thức tính như sau:
L1(⃗ a,⃗b) =
NX
i=1
|a − b|
1 def absolute_difference(query, data):
2 axis_batch_size = tuple(range(1,len(data.shape)))
3 return np.sum(np.abs(data - query), axis=axis_batch_size)
Đến đây chúng ta sẽ thực hiện tính toán để tính độ tương đồng giữa ảnh input và các hình ảnh trong
bộ dữ liệu. Chúng ta sẽ tạo hàmget_l1_score(), hàm này sẽ trả về ảnhquery và ls_path_score chứa
danh sách hình ảnh và giá trị độ tương đồng với từng ảnh.
1 def get_l1_score(root_img_path, query_path, size):
2 query = read_image_from_path(query_path, size)
3 ls_path_score = []
4 for folder in os.listdir(root_img_path):
5 if folder in CLASS_NAME:
6 path = root_img_path + folder
7 images_np, images_path = folder_to_images(path, size) # mang numpy nhieu anh,
paths
8 rates = absolute_difference(query, images_np)
9 ls_path_score.extend(list(zip(images_path, rates)))
10 return query, ls_path_score
Đoạn code này thực hiện quá trình truy xuất hình ảnh bằng cách so sánh một hình ảnh truy vấn với
các hình ảnh trong tập huấn luyện dựa trên điểm L1. Đầu tiên, các hình ảnh được thay đổi cùng kích
thước. 
>>>>>>> HEAD@{1}
