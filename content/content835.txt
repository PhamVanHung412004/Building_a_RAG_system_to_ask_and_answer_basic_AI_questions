<<<<<<< HEAD
Node ID: c6f32ff0-0bf2-4e2d-92e8-b7139ee88545
Text: AI VIETNAM aivietnam.edu.vn 1 def mean_square_difference(query,
data): 2 axis_batch_size = tuple(range(1,len(data.shape))) 3 return
np.mean((data - query)**2, axis=axis_batch_size) Chúng ta tạo hàm
get_l2_score(), hàm này tương tự hàm get_l1_score(), chỉ cần thay đổi
tại biến rates. 1 def get_l2_score(root_img_path, query_path, size): 2
query = ...
=======
AI VIETNAM aivietnam.edu.vn
1 def mean_square_difference(query, data):
2 axis_batch_size = tuple(range(1,len(data.shape)))
3 return np.mean((data - query)**2, axis=axis_batch_size)
Chúng ta tạo hàm get_l2_score(), hàm này tương tự hàm get_l1_score(), chỉ cần thay đổi tại biến
rates.
1 def get_l2_score(root_img_path, query_path, size):
2 query = read_image_from_path(query_path, size)
3 ls_path_score = []
4 for folder in os.listdir(root_img_path):
5 if folder in CLASS_NAME:
6 path = root_img_path + folder
7 images_np, images_path = folder_to_images(path, size) # mang numpy nhieu anh,
paths
8 rates = mean_square_difference(query, images_np)
9 ls_path_score.extend(list(zip(images_path, rates)))
10 return query, ls_path_score
Vì với độ đo L2 này thì giá trị càng nhỏ sẽ càng giống nhau. 
>>>>>>> HEAD@{1}
