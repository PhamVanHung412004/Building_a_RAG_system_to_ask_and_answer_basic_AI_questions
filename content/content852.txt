<<<<<<< HEAD
Node ID: c702ca88-53ae-4f11-b0e5-35b9ffe79195
Text: Nó tương tự như concept của "table" trong cơ sở dữ liệu quan hệ
hoặc "collection" trong MongoDB. Đoạn code sau đây định nghĩa hàm
add_embedding, một hàm giúp trích xuất và lưu trữ các vector đặc trưng
của ảnh vào một collection đã được tạo. 1 def
add_embedding(collection, files_path): 2 ids = [] 3 embeddings = [] 4
for id_filepath, filepath in t...
=======
Nó tương tự như concept của "table" trong cơ sở dữ liệu quan hệ hoặc "collection" trong MongoDB.
Đoạn code sau đây định nghĩa hàm add_embedding, một hàm giúp trích xuất và lưu trữ các vector
đặc trưng của ảnh vào một collection đã được tạo.
1 def add_embedding(collection, files_path):
2 ids = []
3 embeddings = []
4 for id_filepath, filepath in tqdm(enumerate(files_path)):
5 ids.append(f’id_{id_filepath}’)
6 image = Image.open(filepath)
7 embedding = get_single_image_embedding(image=image)
8 embeddings.append(embedding)
9 collection.add(
10 embeddings=embeddings,
11 ids=ids
12 )
Tiếp theo chúng ta khởi tạo một client cho cơ sở dữ liệu Chroma và tạo một collection mới với cấu hình
sử dụng L2 để so sánh các embedding vector. Sau đó, gọi hàm add_embedding để thêm các vector đặc
trưng của ảnh vào collection này, qua đó tạo điều kiện thuận lợi cho việc truy vấn nhanh chóng và hiệu
quả.
1 # Create a Chroma Client
2 chroma_client = chromadb.Client()
3 # Create a collection
4 l2_collection = chroma_client.get_or_create_collection(name="l2_collection",
5 metadata={HNSW_SPACE: "l2"})
6 add_embedding(collection=l2_collection, files_path=files_path)
Hàm search được định nghĩa để thực hiện truy xuất các ảnh dựa trên embedding của ảnh truy vấn.
Hàm này nhận đường dẫn của ảnh truy vấn, loại collection và số lượng kết quả trả về mong muốn, sau
đó trả về danh sách các kết quả phù hợp.
1 def search(image_path, collection, n_results):
2 query_image = Image.open(image_path)
3 query_embedding = get_single_image_embedding(query_image)
4 results = collection.query(
5 query_embeddings=[query_embedding],
16
>>>>>>> HEAD@{1}
