<<<<<<< HEAD
Node ID: 50648978-7641-4afa-bea8-37de5049c47b
Text: Sequential () 8 9 self . gcn = GCN ( 10 in_features =576 , 11
edge_features =576 , 12 out_feature = num_classes , 13 device =" cuda
", 14 ratio =(1 ,) , 15 ) 16 17 def forward (self , x): 18 x = self .
backbone (x) 19 x, edge_sim = self . gcn (x) 20 return x, edge_sim Để
dễ dàng hình dung hơn nữa thì ta hãy nhìn vào model bình thường không
có GN...
=======
Sequential ()
8
9 self . gcn = GCN (
10 in_features =576 ,
11 edge_features =576 ,
12 out_feature = num_classes ,
13 device =" cuda ",
14 ratio =(1 ,) ,
15 )
16
17 def forward (self , x):
18 x = self . backbone (x)
19 x, edge_sim = self . gcn (x)
20 return x, edge_sim
Để dễ dàng hình dung hơn nữa thì ta hãy nhìn vào model bình thường không có GNN:
1 from torchvision . models import mobilenet_v3_small
2
3 class Model (nn. Module ):
4 def __init__ (self , num_classes =2) :
5 super ( Model , self ). __init__ ()
6 self . backbone = mobilenet_v3_small ( pretrained = True )
7 self . backbone . classifier = nn. Sequential ()
8
9 self . head = nn. Sequential ( OrderedDict ([
10 (’fc1 ’, nn. Linear (576 , 256) ),
11 (’relu ’, nn. ReLU ()),
12 (’fc2 ’, nn. Linear (256 , num_classes ))
13 ]))
14
15 def forward (self , x):
16 x = self . backbone (x)
17 x = self . head (x)
18 return x
Qua 2 đoạn code trên ta thấy chỉ cần một thay đổi đơn giản là ta đã có thể tích hợp GNN vào
backbone bất kì cho bài toán image classification.
Tiếp theo ta cần định nghĩa thêm hàm loss để giúp model predict edge giữa các sample chính xác
hơn. Hàm edge loss này sẽ giúp model predict 1 cho 2 sample cùng class và 0 khi 2 sample khác
class, do đó ta cần dùng Binary Cross Entroy (dòng 2). Hàm edege loss sẽ được tính toán ở dòng
18-21. Biến edge_sim mà model return về chính là dạng chưa normalize của correlation matrix có
shape [bs, bs]. Các label ta dùng để train model không thể trực tiếp sử dụng cho hàm edge loss,
các label này cần phải chuyển sang dạng mới có shape [bs, bs] và mang các giá trị 0 hoặc 1 (được
tính toán thông qua hàm label2edge).
1 criterion = nn. 
>>>>>>> HEAD@{1}
