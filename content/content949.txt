AI VIETNAM aivietnam.edu.vn
7
8 # Tiến hành mã hóa thông tin đầu vào sử dụng tokenizer
9 inputs = tokenizer(
10 questions,
11 examples["context"],
12 max_length=MAX_LENGTH,
13 truncation="only_second",
14 stride=STRIDE,
15 return_overflowing_tokens=True,
16 return_offsets_mapping=True,
17 padding="max_length",
18 )
19
20 # Trích xuất offset_mapping từ inputs và loại bỏ nó ra khỏi inputs
21 offset_mapping = inputs.pop("offset_mapping")
22
23 # Trích xuất sample_map từ inputs và loại bỏ nó ra khỏi inputs
24 sample_map = inputs.pop("overflow_to_sample_mapping")
25
26 # Trích xuất thông tin về câu trả lời (answers) từ examples
27 answers = examples["answers"]
28
29 # Khởi tạo danh sách các vị trí bắt đầu và kết thúc câu trả lời
30 start_positions = []
31 end_positions = []
32
33 # Duyệt qua danh sách offset_mapping
34 for i, offset in enumerate(offset_mapping):
35 # Xác định index của mẫu (sample) liên quan đến offset hiện tại
36 sample_idx = sample_map[i]
37
38 # Trích xuất sequence_ids từ inputs
39 sequence_ids = inputs.sequence_ids(i)
40
41 # Xác định vị trí bắt đầu và kết thúc của ngữ cảnh
42 idx = 0
43 while sequence_ids[idx] != 1:
44 idx += 1
45 context_start = idx
46 while sequence_ids[idx] == 1:
47 idx += 1
48 context_end = idx - 1
49
50 # Trích xuất thông tin về câu trả lời cho mẫu này
51 answer = answers[sample_idx]
52
53 if len(answer[’text’]) == 0:
54 start_positions.append(0)
55 end_positions.append(0)
56 else:
57 # Xác định vị trí ký tự bắt đầu và kết thúc của câu trả lời
58 # trong ngữ cảnh
59 start_char = answer["answer_start"][0]
60 end_char = answer["answer_start"][0] + len(answer["text"][0])
61
62 # Nếu câu trả lời không nằm hoàn toàn trong ngữ cảnh,
63 # gán nhãn là (0, 0)
64 if offset[context_start][0] > start_char
65 or offset[context_end][1] < end_char:
5