<<<<<<< HEAD
Node ID: 4f010c60-b1c2-495a-ace4-25ab9f5a4504
Text: • Khi i là 0, điều kiện i == 2 là sai, lệnh print(i) sẽ in ra 0.
• Khi i là 1, điều kiện i == 2 là sai, lệnh print(i) sẽ in ra 1. • Khi
i là 2, điều kiện i == 2 là đúng, lệnh break sẽ được thực thi và vòng
lặp kết thúc. 6 Vòng lặp for lồng Vòng lặp lồng nhau là vòng lặp nằm
bên trong một vòng lặp khác. Nó cho phép ta thực hiện các tác vụ phức
tạ...
=======
• Khi i là 0, điều kiện i == 2 là sai, lệnh print(i) sẽ in ra 0.
• Khi i là 1, điều kiện i == 2 là sai, lệnh print(i) sẽ in ra 1.
• Khi i là 2, điều kiện i == 2 là đúng, lệnh break sẽ được thực thi và vòng lặp kết thúc.
6 Vòng lặp for lồng
Vòng lặp lồng nhau là vòng lặp nằm bên trong một vòng lặp khác. Nó cho phép ta thực hiện các tác
vụ phức tạp hơn, chẳng hạn như duyệt qua các ma trận hoặc thực hiện các phép toán trên nhiều chiều
dữ liệu.
Ví dụ dưới đây minh họa việc sử dụng vòng lặp for lồng nhau để duyệt qua các phần tử của một danh
sách 2 chiều và in ra vị trí cũng như giá trị của từng phần tử:
1 # List 2 chiều
2 matrix = [
3 [1, 2, 3],
4 [4, 5, 6],
5 [7, 8, 9]
6 ]
7
8 # Vòng lặp for lồng nhau để duyệt và in ra
vị trí và giá trị phần tử
9 for i in range(len(matrix)):
10 for j in range(len(matrix[i])):
11 print(f"Vị trí: ({i}, {j}), Giá tr
ị: {matrix[i][j]}")
================= Output ================
Vị trí: (0, 0), Giá trị: 1
Vị trí: (0, 1), Giá trị: 2
Vị trí: (0, 2), Giá trị: 3
Vị trí: (1, 0), Giá trị: 4
Vị trí: (1, 1), Giá trị: 5
Vị trí: (1, 2), Giá trị: 6
Vị trí: (2, 0), Giá trị: 7
Vị trí: (2, 1), Giá trị: 8
Vị trí: (2, 2), Giá trị: 9
==========================================
5
>>>>>>> HEAD@{1}
