4
5 Returns:
6 None
7 """
8 data = self.read_json()
9 download_tasks = []
10
11 total_images = sum(len(urls) for terms in data.values() for urls in terms.values())
12 with tqdm(total=total_images, desc="Downloading images") as pbar:
13 with concurrent.futures.ThreadPoolExecutor(max_workers=self.max_workers) as
executor:
14 for category, terms in data.items():
15 for term, urls in terms.items():
16 for url in urls:
17 download_tasks.append(executor.submit(self.download_image, url,
category, term, pbar))
18 time.sleep(self.delay) # Polite delay
19
20 for future in concurrent.futures.as_completed(download_tasks):
21 print(future.result())
22
23 self.export_filename()
24
25 def export_filename(self):
26 """
27 Export the filename directories to a text file.
28
29 Returns:
30 None
31 """
32 with open(’filename.txt’, ’w’) as file:
33 for filename in sorted(self.filename):
34 file.write(f"{filename}\n")
30