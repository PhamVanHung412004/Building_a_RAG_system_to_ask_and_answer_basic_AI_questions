shape ) *
y_0_hat +
50 get_index_from_list ( self . posterior_mean_coef2 , t, y_t . shape ) * y_t
51 )
52 posterior_log_variance_clipped = get_index_from_list (
53 self . posterior_log_variance_clipped , t, y_t . shape
54 )
55 return posterior_mean , posterior_log_variance_clipped
56
57 def p_mean_variance (self , y_t , t, clip_denoised : bool , y_cond = None ):
58 noise_level = get_index_from_list ( self . gammas , t, x_shape =(1 , 1)).to( y_t .
