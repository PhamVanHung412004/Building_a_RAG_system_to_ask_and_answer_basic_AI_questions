<<<<<<< HEAD
Node ID: 9f4f081e-ca96-4c77-8ab9-8f4571a9b461
Text: Ưu điểm: - Giữ được thông tin về mật độ điểm của dữ liệu gốc. -
Kiểm soát được mức độ giảm mẫu chính xác. - Dễ dàng thực hiện và hiệu
quả về tính toán. Nhược điểm: - Có thể làm mất các chi tiết quan
trọng, đặc biệt là các chi tiết ở ranh giới giữa các voxel. - Hiệu quả
giảm sút với dữ liệu điểm phân bố không đều. Lấy mẫu xa nhất (Farthest
Point ...
=======
Ưu điểm:
- Giữ được thông tin về mật độ điểm của dữ liệu gốc.
- Kiểm soát được mức độ giảm mẫu chính xác.
- Dễ dàng thực hiện và hiệu quả về tính toán.
Nhược điểm:
- Có thể làm mất các chi tiết quan trọng, đặc biệt là các chi tiết ở ranh giới giữa các voxel.
- Hiệu quả giảm sút với dữ liệu điểm phân bố không đều.
Lấy mẫu xa nhất (Farthest Point Sampling - FPS):
Ý tưởng: Lặp lại việc chọn điểm xa nhất so với các điểm đã chọn trước đó.
Giảm mẫu: Bắt đầu với một điểm ngẫu nhiên, sau đó chọn điểm có khoảng cách lớn nhất đến tất cả
các điểm đã chọn trước đó. Lặp lại quá trình này cho đến khi đạt được số lượng điểm mong muốn.
Ưu điểm:
- Giữ được phân bố tương đối đều của các điểm trên đám mây 3D, bảo toàn tốt các chi tiết.
- Hiệu quả với cả dữ liệu điểm phân bố đều và không đều.
Nhược điểm:
- Không trực tiếp kiểm soát được mức độ giảm mẫu.
- Có thể tính toán tốn thời gian hơn so với phân ô voxel.
Kết quả của hai phương pháp sampling được biểu diễn qua hình 2.
1 def voxel_grid_sampling (pcd , voxel_size =0.05) :
2 downpcd = pcd . voxel_down_sample ( voxel_size = voxel_size )
3 return downpcd
4
5 def farthest_point_sampling (pcd , num_points = 100) :
6 downpcd = pcd . farthest_point_down_sample ( num_samples = num_points )
7 return downpcd
3
>>>>>>> HEAD@{1}
