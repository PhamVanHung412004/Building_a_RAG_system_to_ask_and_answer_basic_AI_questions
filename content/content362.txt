resnet .fc.
in_features , 512) )
9 self . fc1 = nn. Linear (512 , 128)
10 self . fc2 = nn. Linear (128 , num_classes )
11
12 def forward (self , x_3d ):
13 # (bs , C, T, H, W)
14 # concatenate all C and T dimensions to make it (bs , C*T, H, W)
15 x_3d = x_3d . permute (0 , 2, 1, 3, 4). contiguous ()
16 x_3d = x_3d . view (
17 x_3d . size (0) , x_3d . size (1) * x_3d . size (2) , x_3d . size (3) ,
x_3d . size (4)
18 )
19
20 out = self . resnet ( x_3d )
21
22 x = self . fc1 ( out )
23 x = F. relu (x)
24 x = self . fc2 (x)
25 return x
26
• CNN-LSTM: Đối với model CNN-LSTM, ta sẽ dùng 2D model (share weight) để extract
9