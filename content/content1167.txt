<<<<<<< HEAD
Node ID: cdf373c5-d501-419d-9ba4-9c86f806edb0
Text: 201 https :// github . com / hojonathanho / diffusion / blob /1
e0dceb3b3495bbe19116a5e1b3596cd0706c543 / diffusion_tf / models / unet
.py# L66 . 202 """ 203 204 def __init__ ( 205 self , 206 channels ,
207 num_heads =1 , 208 num_head_channels =-1, 209 use_checkpoint =
False , 210 use_new_attention_order = False , 211 ): 212 super ().
__init__ (...
=======
201 https :// github . com / hojonathanho / diffusion / blob /1
e0dceb3b3495bbe19116a5e1b3596cd0706c543 / diffusion_tf / models / unet .py# L66 .
202 """
203
204 def __init__ (
205 self ,
206 channels ,
207 num_heads =1 ,
208 num_head_channels =-1,
209 use_checkpoint = False ,
210 use_new_attention_order = False ,
211 ):
212 super (). __init__ ()
213 self . channels = channels
214 if num_head_channels == -1:
215 self . num_heads = num_heads
216 else :
217 assert (
218 channels % num_head_channels == 0
219 ), f"q,k,v channels { channels } is not divisible by num_head_channels {
num_head_channels }"
220 self . num_heads = channels // num_head_channels
221 self . use_checkpoint = use_checkpoint
222 self . norm = normalization ( channels )
223 self . qkv = nn. Conv1d ( channels , channels * 3, 1)
224 if use_new_attention_order :
225 # split qkv before split heads
226 self . attention = QKVAttention ( self . num_heads )
227 else :
228 # split heads before split qkv
229 self . attention = QKVAttentionLegacy ( self . num_heads )
230
231 self . 
>>>>>>> HEAD@{1}
